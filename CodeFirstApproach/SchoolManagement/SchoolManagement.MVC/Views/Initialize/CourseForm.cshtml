@model SchoolManagement.ModelView.CourseViewModel

@{
    ViewData["Title"] = "Course Form";
}

<h1>Course Details Form</h1>

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <div class="alert alert-success">@ViewBag.SuccessMessage</div>
}

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.CourseId)
    <div class="col-6">
        <div class="form-group">
            @Html.LabelFor(m => m.CourseName, "Course Name:* ", new { @class = "control-label fw-bold" })
            @Html.TextBoxFor(m => m.CourseName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CourseName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Credits, "Credits:* ", new { @class = "control-label fw-bold" })
            @Html.TextBoxFor(m => m.Credits, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Credits, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.TeacherId, "Teacher:* ", new { @class = "control-label fw-bold" })
            @Html.DropDownListFor(m => m.TeacherId, new SelectList(ViewBag.ListOfTeachers, "TeacherId", "FullName"), "Select Teacher", new { @class = "form-control" })
        </div>
        <div class="form-group mt-2">
            <button type="submit" class="btn btn-primary mr-2">Save</button>
            @Html.ActionLink("Back to Course List", "CourseList", "Home", null, new { @class = "btn btn-dark" })
        </div>


    </div>

  
}
